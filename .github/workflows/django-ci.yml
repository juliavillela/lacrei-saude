name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.13]

    services:
      postgres:
        image: postgres:14.19
        env:
          POSTGRES_DB: github_actions
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
        - 5432:5432

        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Poetry
      run: pip install poetry

    - name: Install dependencies
      run: poetry install --with dev --no-root
        
    - name: Lint with Black
      run: poetry run black . --check

    - name: Sort imports with isort
      run: poetry run isort . --check-only

    - name: Check code with Flake8
      run: poetry run flake8 .

 
    - name: Run migrations
      env:
        DJANGO_ENV: development
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        POSTGRES_DB: github_actions
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_HOST: localhost
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
      run: poetry run python manage.py migrate
      
    - name: Run Django tests
      env:
        DJANGO_ENV: development
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        POSTGRES_DB: github_actions
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_HOST: localhost
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
      run: poetry run python manage.py test
  
  deploy:
    name: Build and Deploy to Elastic Beanstalk
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    env:
      DOCKER_IMAGE: juliavillela/lacrei-saude-app

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Build and push image to Docker Hub
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
            ${{ env.DOCKER_IMAGE }}:latest